<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="@color/white">

    <!-- Image Section -->
    <ImageView
        android:id="@+id/image_article"
        android:layout_width="match_parent"
        android:layout_height="200dp"
        android:scaleType="centerCrop"
        android:src="@drawable/dsa"
        android:contentDescription="dsa image "/>

    <ScrollView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_below="@id/image_article">

        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:orientation="vertical"
            android:padding="16dp">

            <!-- Title -->
            <TextView
                android:id="@+id/text_title"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:text="A Comprehensive Guide to Data Structures and Algorithms"
                android:textSize="24sp"
                android:textStyle="bold"
                android:textColor="@color/Red"
                android:paddingBottom="16dp" />

            <!-- Introduction -->
            <TextView
                android:id="@+id/text_introduction"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:text="Introduction"
                android:textSize="20sp"
                android:textStyle="bold"
                android:textColor="@color/blue"
                android:paddingBottom="8dp" />

            <TextView
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:text="Data Structures and Algorithms (DSA) are essential components of computer science and programming. They are the building blocks that allow efficient storage and retrieval of data, as well as performing various computational tasks efficiently."
                android:textSize="16sp"
                android:textColor="@color/black"
                android:lineSpacingExtra="4dp"
                android:paddingBottom="16dp" />

            <!-- Arrays -->
            <TextView
                android:id="@+id/text_array"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:text="Arrays"
                android:textSize="20sp"
                android:textStyle="bold"
                android:textColor="@color/blue"
                android:paddingBottom="8dp" />

            <TextView
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:text="An array is a collection of elements stored in contiguous memory locations. It is one of the simplest and most widely used data structures. Arrays are used to store multiple elements of the same data type and allow easy access to individual elements using an index."
                android:textSize="16sp"
                android:textColor="@color/black"
                android:lineSpacingExtra="4dp"
                android:paddingBottom="16dp" />

            <!-- Linked Lists -->
            <TextView
                android:id="@+id/text_linked_list"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:text="Linked Lists"
                android:textSize="20sp"
                android:textStyle="bold"
                android:textColor="@color/blue"
                android:paddingBottom="8dp" />

            <TextView
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:text="A linked list is a linear data structure consisting of a sequence of elements, where each element points to the next element in the sequence. Unlike arrays, linked lists do not have a fixed size and can dynamically allocate memory as needed. Linked lists come in different variations such as singly linked lists, doubly linked lists, and circular linked lists, each with its own set of advantages and disadvantages."
                android:textSize="16sp"
                android:textColor="@color/black"
                android:lineSpacingExtra="4dp"
                android:paddingBottom="16dp" />

            <!-- Binary Trees -->
            <TextView
                android:id="@+id/text_binary_tree"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:text="Binary Trees"
                android:textSize="20sp"
                android:textStyle="bold"
                android:textColor="@color/blue"
                android:paddingBottom="8dp" />

            <TextView
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:text="A binary tree is a hierarchical data structure in which each node has at most two children, referred to as the left child and the right child. Binary trees are used in many algorithms and data structures, including binary search trees, heap data structures, and expression trees."
                android:textSize="16sp"
                android:textColor="@color/black"
                android:lineSpacingExtra="4dp"
                android:paddingBottom="16dp" />

            <!-- Sorting Algorithms -->
            <TextView
                android:id="@+id/text_sorting_algorithms"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:text="Sorting Algorithms"
                android:textSize="20sp"
                android:textStyle="bold"
                android:textColor="@color/blue"
                android:paddingBottom="8dp" />

            <TextView
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:text="Sorting algorithms are used to arrange the elements of a list or array in a specific order. There are various sorting algorithms, each with its own complexity and efficiency. Some common sorting algorithms include Bubble Sort, Selection Sort, Insertion Sort, Merge Sort, Quick Sort, and Heap Sort."
                android:textSize="16sp"
                android:textColor="@color/black"
                android:lineSpacingExtra="4dp"
                android:paddingBottom="16dp" />

            <!-- Searching Algorithms -->
            <TextView
                android:id="@+id/text_searching_algorithms"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:text="Searching Algorithms"
                android:textSize="20sp"
                android:textStyle="bold"
                android:textColor="@color/blue"
                android:paddingBottom="8dp" />

            <TextView
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:text="Searching algorithms are used to find an element within a data structure or collection. Various searching algorithms exist, each with its own advantages and disadvantages. Some common searching algorithms include Linear Search, Binary Search, Depth-First Search (DFS), Breadth-First Search (BFS), and Hashing."
                android:textSize="16sp"
                android:textColor="@color/black"
                android:lineSpacingExtra="4dp"
                android:paddingBottom="16dp" />

            <!-- Graph -->
            <TextView
                android:id="@+id/text_graph"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:text="Graph"
                android:textSize="20sp"
                android:textStyle="bold"
                android:textColor="@color/blue"
                android:paddingBottom="8dp" />

            <TextView
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:text="A graph is a non-linear data structure consisting of a collection of vertices (nodes) and edges (links) that connect these vertices. Graphs are widely used in computer science and various applications, including network design, routing algorithms, social networks, and more. Graphs come in different types, such as directed graphs, undirected graphs, weighted graphs, and cyclic graphs."
                android:textSize="16sp"
                android:textColor="@color/black"
                android:lineSpacingExtra="4dp"
                android:paddingBottom="16dp" />

            <!-- Conclusion -->
            <TextView
                android:id="@+id/text_conclusion"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:text="Conclusion"
                android:textSize="20sp"
                android:textStyle="bold"
                android:textColor="@color/blue"
                android:paddingBottom="8dp" />

            <TextView
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:text="Data Structures and Algorithms are fundamental concepts in computer science and programming. Mastering these concepts is essential for building efficient and scalable software applications. By understanding the principles behind data structures and algorithms, developers can write better code, optimize performance, and solve complex problems more effectively."
                android:textSize="16sp"
                android:textColor="@color/black"
                android:lineSpacingExtra="4dp"
                android:paddingBottom="16dp" />


            <TextView
                android:id="@+id/text_pdf_link"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:text="Click here to view the PDF"
                android:textSize="18sp"
                android:textColor="@color/blue"
                android:textStyle="bold"
                android:paddingTop="16dp"
                android:gravity="center"
                android:clickable="true"
                android:focusable="true"/>


        </LinearLayout>
    </ScrollView>

</RelativeLayout>

